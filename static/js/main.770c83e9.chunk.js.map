{"version":3,"sources":["CitySearch.js","NumberOfEvents.js","Event.js","EventList.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["CitySearch","state","query","suggestions","showSuggestions","undefined","handleInputChanged","event","value","target","props","locations","filter","location","toUpperCase","indexOf","setState","handleItemClicked","suggestion","updateEvents","className","type","placeholder","this","onChange","onFocus","style","display","map","onClick","Component","NumberOfEvents","eventValue","handleEventInputChanged","htmlFor","min","max","Event","showDetails","handleClick","showHideDetails","summary","start","dateTime","href","htmlLink","description","EventList","events","id","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","getEvents","NProgress","window","startsWith","done","getAccessToken","token","removeQuery","url","axios","get","data","JSON","stringify","history","pushState","pathname","newurl","protocol","host","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","eventCount","selectedLocation","locationEvents","count","slice","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.770c83e9.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: undefined\n  };\n\n  /*handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ query: value });\n  }*/\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    this.setState({\n      query: value,\n      suggestions,\n    });\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false\n    });\n    this.props.updateEvents(suggestion);\n  }\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <input\n        type=\"text\"\n        className=\"city\"\n        placeholder=\"Search here\"\n        value={this.state.query}\n        onChange={this.handleInputChanged}\n        onFocus={() => { this.setState({ showSuggestions: true }) }}\n        />\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\n          {this.state.suggestions.map((suggestion) => (\n            <li\n            key={suggestion}\n            onClick={() => this.handleItemClicked(suggestion)}\n            >{suggestion}</li>\n          ))}\n          <li\n            key='all'\n            onClick={() => this.handleItemClicked('all')}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n  state = {\n    eventValue: 32,\n  };\n\n  handleEventInputChanged = (event) => {\n    const eventValue = event.target.value;\n    this.setState({\n      eventValue,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"numberOfEvents\">\n        <label htmlFor='numberOfEvent'>Number of Events</label>\n        <input\n          type=\"number\"\n          min=\"1\" max=\"32\"\n          className=\"event-number-input\"\n          placeholder=\"Enter Number of Events\"\n          value={this.state.eventValue}\n          onChange={this.handleEventInputChanged}\n        />\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;","import React, { Component } from \"react\";\n\nclass Event extends Component {\n  state = {\n    showDetails: false\n  };\n\n  handleClick = () => {\n    if (this.state.showHideDetails === true) {\n      this.setState({ showHideDetails: false });\n    } else {\n      this.setState({ showHideDetails: true });\n    }\n  };\n\n  render() {\n    const { event } = this.props;\n    return (\n      <div className='event'>\n        <h1>{event.summary}</h1>\n        <p>{event.start.dateTime}</p>\n        <p className='locations'>{event.location}</p>\n\n        {this.state.showHideDetails && (\n          <div className='event-details'>\n            <h2>About event:</h2>\n            <a href={event.htmlLink}>See Details on Google Calendar</a>\n            <p>{event.description}</p>\n          </div>\n        )}\n\n        <button\n          className='show-hide-btn'\n          onClick={() => this.handleClick()}\n        >\n          {!this.state.showHideDetails ? 'show details' : 'hide-details'}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event'; // in src/EventList.js\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className=\"EventList\">\n        {events.map(event =>\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        )}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","const mockData = [\n  {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181161784712000\\\"\",\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:17:46.000Z\",\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\n    \"summary\": \"Learn JavaScript\",\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    \"location\": \"London, UK\",\n    \"creator\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"organizer\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"start\": {\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n      \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n    \"originalStartTime\": {\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n      \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n  },\n  {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181159875584000\\\"\",\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:14:30.000Z\",\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\n    \"summary\": \"React is Fun\",\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    \"location\": \"Berlin, Germany\",\n    \"creator\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"organizer\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"start\": {\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n      \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    \"originalStartTime\": {\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n      \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n  }\n];\n\nexport { mockData };","/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\n\nimport { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    'https://5p0fb3pdlj.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith('http://localhost')) {\n    NProgress.done();\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = 'https://5p0fb3pdlj.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://5p0fb3pdlj.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n}","import React, { Component } from 'react';\nimport './App.css';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport EventList from './EventList';\nimport { getEvents, extractLocations } from './api';\nimport \"./nprogress.css\";\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    eventCount: 32,\n    selectedLocation: \"all\",\n  }\n\n  updateEvents = (location, eventCount) => {\n    let locationEvents;\n    getEvents().then((events) => {\n      const count = eventCount || this.state.eventCount;\n      const selectedLocation = location || this.state.selectedLocation;\n\n      if (selectedLocation === \"all\") {\n        locationEvents = events.slice(0, count);\n        //console.log({ locationEvents });\n      } else {\n        locationEvents = events\n          .filter((event) => event.location === selectedLocation)\n          .slice(0, count);\n      }\n\n      this.setState({\n        events: locationEvents,\n        eventCount: count,\n        selectedLocation,\n      });\n    });\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ events, locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <h1>Meethub App</h1>\n        <h4>Choose a city</h4>\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}